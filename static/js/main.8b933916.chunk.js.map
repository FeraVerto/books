{"version":3,"sources":["ui/BookList/BookList.module.css","App.module.css","ui/CreateBook/CreateBook.module.css","ui/EditBook/EditBookForm/EditFormBook.module.css","ui/Search/Search.module.css","ui/EditBook/EditBook.module.css","ui/common/Button/Button.module.css","ui/common/Input/Input.module.css","ui/Navigation/Navigaton.module.css","ui/common/Button/Button.tsx","ui/common/Input/Input.tsx","ui/common/getBooks.ts","ui/Search/Search.tsx","ui/BookList/BookList.tsx","ui/image/download.svg","ui/image/nophoto.jpg","ui/FormField/FormField.tsx","ui/common/getBase64.ts","ui/CreateBook/CreateBook.tsx","ui/EditBook/EditBookForm/EditBookForm.tsx","ui/EditBook/EditBook.tsx","ui/Navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx","ui/FormField/FormField.module.css"],"names":["module","exports","Button","type","text","onClick","className","s","button","Input","id","onChange","value","name","rest","input","getBooks","resultArray","Object","keys","localStorage","key","book","getItem","push","JSON","parse","Search","dispatch","state","useState","receivedBooks","setReceivedBooks","formik","useFormik","initialValues","search","onSubmit","values","payload","filter","useEffect","handleSubmit","search_input","handleChange","BookList","book_list","books","map","book_item_link","to","book_item","author","title","book_item_image","alt","src","cover","FormField","file","setFile","previewPhoto","i","image","width","height","URL","createObjectURL","htmlFor","getFieldProps","errors","touched","error","file_block","image_container","noPhoto","file_block_wrapper","input_file_button","input_file_icon_wrapper","input_file_icon","download","input_file","input_image","onBlur","handleBlur","event","target","setFieldValue","files","getBase64","Promise","resolve","reject","reader","FileReader","onload","result","onerror","match","readAsDataURL","CreateBook","createBook","setCreateBook","editMode","setEditMode","a","console","log","then","base64","stringify","validate","uuidv4","setItem","create_position","form","button_position","EditBookForm","setLocalStateUpdate","deleteBook","button_block","EditBook","useParams","localStateUpdate","localStateDelete","setLocalStateDelete","removeItem","b","Navigation","navigation","initialState","reducer","action","toLowerCase","includes","App","useReducer","App_header","main","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b933916.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"book_list\":\"BookList_book_list__3m2QI\",\"book_item_link\":\"BookList_book_item_link__3cqyY\",\"swing\":\"BookList_swing__3iAPe\",\"book_item\":\"BookList_book_item__2BIC2\",\"book_item_image\":\"BookList_book_item_image__2s3Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"main\":\"App_main__3ZkGI\",\"create_position\":\"App_create_position__367Uh\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App_header\":\"App_App_header__1WhCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateBook_form__19dYL\",\"create_position\":\"CreateBook_create_position__3j2xZ\",\"button_position\":\"CreateBook_button_position__Djt3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_block\":\"EditFormBook_button_block__394kl\",\"button_position\":\"EditFormBook_button_position__17wU-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2YEIt\",\"button\":\"Search_button__2nzbD\",\"search_input\":\"Search_search_input__3187v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditBook_form__1EE08\",\"create_position\":\"EditBook_create_position__12pxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__senhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3q1z6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigaton_navigation__clwd_\"};","import React from 'react'\nimport s from './Button.module.css'\n\nexport type ButtonType = {\n    text: string\n    type: \"button\" | \"submit\" | \"reset\" | undefined\n    onClick?: () => void\n    className?: string\n}\n\nexport const Button = ({type,  text, onClick, className}: ButtonType) => {\n    return (\n        <button className={`${s.button} ${className}`} type={type} onClick={onClick}>{text}</button>\n    )\n}","import React, {ChangeEvent} from 'react'\nimport s from \"./Input.module.css\"\n\nexport type InputType = {\n    className?: string\n    id: string\n    onChange?: (event: ChangeEvent) => void\n    value?: string\n    type: string\n    onBlur?: () => void\n    name: string\n}\n\nexport const Input = ({className, id, onChange, value, type, name, ...rest}: InputType) => {\n    return (\n        <input type={type}\n               className={`${s.input} ${className}`}\n               id={id}\n               onChange={onChange}\n               value={value}\n               name={name}\n               {...rest}\n        />\n    )\n}","import {BookRecord} from \"../BookList/BookList\";\n\nexport const getBooks = () => {\n    const resultArray: Array<BookRecord> = []\n    const keys: Array<string> = Object.keys(localStorage);\n    for (const key of keys) {\n        const book = localStorage.getItem(key)\n        if (book !== null) resultArray.push({id: key, book: JSON.parse(book)})\n    }\n    return resultArray\n}","import React, {Dispatch, useEffect, useState} from 'react'\nimport {Button} from '../common/Button/Button';\nimport {Input} from \"../common/Input/Input\";\nimport s from \"./Search.module.css\"\nimport {useFormik} from \"formik\";\nimport {ActionType, StateType} from \"../../App\";\nimport {getBooks} from \"../common/getBooks\";\nimport {BookRecord} from \"../BookList/BookList\";\n\ntype SearchType = {\n    state: StateType\n    dispatch: Dispatch<ActionType>\n}\n\nexport const Search = ({dispatch, state}: SearchType) => {\n\n    const [receivedBooks, setReceivedBooks] = useState<Array<BookRecord>>()\n\n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },\n        onSubmit: values => {\n            dispatch({type: 'SET_BOOKS_LIST', payload: receivedBooks})\n            dispatch({type: \"SEARCH_FILTER\", payload: {filter: values.search}})\n        }\n    });\n\n    useEffect(() => {\n        setReceivedBooks(getBooks())\n    }, [])\n\n    return (\n        <form onSubmit={formik.handleSubmit} className={s.search}>\n\n            <Input id={\"search\"}\n                   className={s.search_input}\n                   name={\"search\"}\n                   onChange={formik.handleChange}\n                   value={formik.values.search}\n                   type=\"search\"/>\n            <Button text={\"Search\"} type={\"submit\"}/>\n        </form>\n\n    )\n}","import React, {Dispatch, useEffect} from 'react'\nimport {NavLink} from 'react-router-dom';\nimport {ActionType, StateType} from \"../../App\";\nimport s from './BookList.module.css'\nimport {Search} from \"../Search/Search\";\nimport {getBooks} from \"../common/getBooks\";\n\nexport type BookType = {\n    title: string,\n    author: string,\n    cover: any\n}\n\nexport type BookRecord = {\n    id: string,\n    book: BookType\n}\n\nexport type BooksListType = {\n    state: StateType\n    dispatch: Dispatch<ActionType>\n}\n\n\nexport const BookList = ({state, dispatch}: BooksListType) => {\n\n    useEffect(() => {\n        dispatch({type: 'SET_BOOKS_LIST', payload: getBooks()})\n    }, [])\n\n    return (\n        <>\n            <h1>List of Books</h1>\n            <Search state={state} dispatch={dispatch}/>\n            <ul className={s.book_list}>\n                {\n                    state.books.map((book: BookRecord) => {\n                        return (\n                            <NavLink className={s.book_item_link} key={book.id} to={`/edit/${book.id}`}>\n                                <li className={s.book_item}>\n                                    <span>Author: {book.book.author ? book.book.author : \"unknown\"}</span>\n                                    <span>{book.book.title}</span>\n                                    <div className={s.book_item_image}>\n                                        <img alt={book.book.title} src={book.book.cover}/>\n                                    </div>\n                                </li>\n                            </NavLink>\n                        )\n                    })\n                }\n            </ul>\n        </>\n\n    )\n}","export default __webpack_public_path__ + \"static/media/download.3bcaa934.svg\";","export default __webpack_public_path__ + \"static/media/nophoto.8ce14280.jpg\";","import React, {ChangeEvent, useState} from 'react'\nimport {FormikErrors, FormikValues} from \"formik/dist/types\";\nimport s from \"./FormField.module.css\"\nimport {Input} from \"../common/Input/Input\";\nimport download from \"./../image/download.svg\"\nimport noPhoto from \"./../image/nophoto.jpg\"\nimport {BookType} from \"../BookList/BookList\";\n\nexport type FormField = {\n    formik: FormikValues\n    title: string\n    author: string\n    cover?: string\n}\n\nexport const FormField = ({formik, title, author, cover}: FormField) => {\n\n    const [file, setFile] = useState<any>()\n\n    const previewPhoto = file && [...file].map((file, i) => (\n        <img className={s.image} alt={title} width={200} height={300} key={i} src={URL.createObjectURL(file)}/>\n    ))\n\n    const getFile = (event: ChangeEvent) => {\n        const target = event.target as HTMLInputElement\n        formik.setFieldValue(\"cover\", (target.files as FileList)[0]);\n        target.files && setFile(target.files)\n    }\n\n\n    return (\n        <>\n            <label htmlFor=\"title\">{title}</label>\n            <Input id={\"title\"}\n                   type={\"text\"}\n                   {...formik.getFieldProps('title')}/>\n\n            {formik.errors.title && formik.touched.title\n                ? <div className={s.error}>{formik.errors.title}</div>\n                : null}\n\n            <label htmlFor=\"author\">{author}</label>\n            <Input id={\"author\"}\n                   type={\"text\"}\n                   {...formik.getFieldProps('author')}/>\n\n            {formik.errors.author && formik.touched.author\n                ? <div className={s.error}>{formik.errors.author}</div>\n                : null}\n\n            <div className={s.file_block}>\n\n                <div className={s.image_container}>\n                    {previewPhoto ||\n                    <img className={s.image} width={200} height={300} src={cover || noPhoto} alt={title}/>}\n                </div>\n\n                <div className={s.file_block_wrapper}>\n                    <label className={s.input_file_button} htmlFor=\"cover\">\n                        <span className={s.input_file_icon_wrapper}>\n                            <img className={s.input_file_icon} src={download}\n                                 alt=\"Select a file\" width=\"25\"/>\n                        </span>\n                        <span className={s.input_file}>Select a file</span>\n                    </label>\n\n                    <Input className={s.input_image}\n                           id={\"cover\"}\n                           type={\"file\"}\n                           name={\"cover\"}\n                           onBlur={formik.handleBlur}\n                           onChange={getFile}\n                    />\n\n                    {formik.errors.cover && formik.touched.cover\n                        ? <div className={s.error}>{formik.errors.cover}</div>\n                        : null}\n                </div>\n            </div>\n\n\n        </>\n    )\n}","export const getBase64 = (file: Blob) => {\n\n    return new Promise((resolve, reject) => {\n        //создаем объект для чтения файлов с компьютера пользователя\n        const reader = new FileReader();\n        //обработчик события load,\n        //срабатывает при успешном завершении операции чтения\n        reader.onload = () => resolve(reader.result);\n        //обработчик события error\n        //срабатывает, когда возникает ошибка при операции чтения\n        reader.onerror = error => reject(error);\n        //проверка на существование file и проверка существования образа\n        if (file.type && file.type.match('image.*')) {\n            //запускает процесс чтения Blob, => data: URL\n            reader.readAsDataURL(file);\n        }\n    });\n}","import React, {Dispatch, useEffect, useState} from 'react'\nimport {useFormik} from \"formik\";\nimport {v4 as uuidv4} from 'uuid';\nimport {FormField} from \"../FormField/FormField\";\nimport {BookType} from \"../BookList/BookList\";\nimport {getBase64} from \"../common/getBase64\";\nimport s from \"./CreateBook.module.css\"\nimport {Button} from \"../common/Button/Button\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport type CreateBookType = {\n    editMode: boolean\n    setEditMode: (editMode: boolean) => void\n}\n\nexport const CreateBook = () => {\n\n    const [createBook, setCreateBook] = useState<string>(\"\")\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const formik = useFormik<BookType>({\n        initialValues: {\n            title: '',\n            author: '',\n            cover: {}\n        },\n        onSubmit: async (values: BookType) => {\n            console.log(\"values\", values)\n            await getBase64(values.cover).then(base64 => {\n                values = {...values, cover: base64}\n                setCreateBook(JSON.stringify(values))\n            });\n            setEditMode(true)\n        },\n        validate: (values: BookType) => {\n            const errors = {} as BookType\n            if (!values.title) {\n                errors.title = 'Required'\n            }\n\n            if (!values.author) {\n                errors.author = 'Required'\n            }\n\n            if (!values.cover) {\n                errors.cover = 'Required'\n            }\n            return errors\n        },\n    })\n\n    useEffect(() => {\n        const id = uuidv4();\n        createBook && localStorage.setItem(id, createBook)\n    }, [createBook])\n\n    if (editMode) return <Redirect to='/'/>\n\n    return (\n        <div className={s.create_position}>\n            <form className={s.form} onSubmit={formik.handleSubmit}>\n                <h2>Add a new book</h2>\n                <FormField formik={formik}\n                           title={\"Book  title\"}\n                           author={\"Author name\"}/>\n                <Button className={s.button_position} type={\"submit\"} text={\"Create\"}/>\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport {useFormik} from \"formik\";\nimport {BookType} from \"../../BookList/BookList\";\nimport {getBase64} from \"../../common/getBase64\";\nimport {FormField} from \"../../FormField/FormField\";\nimport {Button} from \"../../common/Button/Button\";\nimport s from \"./EditFormBook.module.css\"\n\nexport type CreateBookFormType = {\n    setLocalStateUpdate: (localStateUpdate: string | null) => void\n    deleteBook: (id: string) => void\n    editMode: boolean\n    setEditMode: (editMode: boolean) => void\n    cover: string\n    id: string\n    title: string\n    author: string\n}\n\nexport const EditBookForm = ({\n                                 title,\n                                 author,\n                                 id,\n                                 setLocalStateUpdate,\n                                 deleteBook,\n                                 setEditMode,\n                                 cover\n                             }: CreateBookFormType) => {\n\n    const formik = useFormik<BookType>({\n        initialValues: {\n            title: title,\n            author: author,\n            cover: cover\n        },\n        onSubmit: async (values) => {\n            await getBase64(values.cover).then(base64 => {\n                values = {...values, cover: base64}\n                setLocalStateUpdate(JSON.stringify(values))\n            })\n            setEditMode(true)\n        },\n        validate: (values: BookType) => {\n            const errors = {} as BookType\n            if (!values.title) {\n                errors.title = 'Required'\n            }\n\n            if (!values.author) {\n                errors.author = 'Required'\n            }\n\n            if (!values.cover) {\n                errors.cover = 'Required'\n            }\n            return errors\n        },\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit} key={id}>\n            <FormField formik={formik}\n                       title={\"Book title\"}\n                       author={\"Author name\"}\n                       cover={cover}\n            />\n\n            <div className={s.button_block}>\n                <Button type={\"submit\"}\n                        className={s.button_position}\n                        text={\"Delete\"}\n                        onClick={() => {\n                            deleteBook(id)\n                        }}/>\n                <Button type={\"submit\"}\n                        className={s.button_position}\n                        text={\"Save\"}\n                />\n            </div>\n        </form>\n    )\n}","import React, {Dispatch, useEffect, useState} from 'react';\nimport {ActionType, StateType} from \"../../App\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport s from \"./EditBook.module.css\"\nimport {EditBookForm} from \"./EditBookForm/EditBookForm\";\n\nexport type EditBookType = {\n    state: StateType\n    dispatch: Dispatch<ActionType>\n}\n\n\nexport const EditBook = ({state, dispatch}: EditBookType) => {\n    const {id} = useParams<{ id: string }>()\n\n    const [localStateUpdate, setLocalStateUpdate] = useState<string | null>(\"\")\n    const [localStateDelete, setLocalStateDelete] = useState<string>(\"\")\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    console.log(\"localStateUpdate\", localStateUpdate)\n\n    const deleteBook = (id: string) => {\n        setLocalStateDelete(id)\n        setEditMode(true)\n    }\n\n    useEffect(() => {\n        localStateUpdate && localStorage.setItem(id, localStateUpdate)\n        localStateDelete && localStorage.removeItem(localStateDelete)\n    })\n\n    if (editMode) return <Redirect to='/'/>\n\n    return (\n        <div className={s.create_position}>\n            <div className={s.form}>\n                <h2>Edit book</h2>\n                {\n                    state.books.map(b => {\n                        return b.id === id &&\n                            (\n                                <EditBookForm setLocalStateUpdate={setLocalStateUpdate}\n                                              deleteBook={deleteBook}\n                                              editMode={editMode}\n                                              setEditMode={setEditMode}\n                                              cover={b.book.cover}\n                                              id={b.id}\n                                              title={b.book.title}\n                                              author={b.book.author}\n                                              key={b.id}\n                                />\n                            )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from \"./Navigaton.module.css\"\n\nexport const Navigation = () => {\n    return (\n        <div className={s.navigation}>\n            <NavLink to=\"/\">List of books</NavLink>\n            <NavLink to=\"/create\">Create book</NavLink>\n        </div>\n    )\n}","import React, {useReducer, useState} from 'react';\nimport {Route} from 'react-router-dom';\nimport s from './App.module.css';\nimport {BookList, BookRecord} from \"./ui/BookList/BookList\";\nimport {CreateBook} from \"./ui/CreateBook/CreateBook\";\nimport {EditBook} from \"./ui/EditBook/EditBook\";\nimport {Navigation} from \"./ui/Navigation/Navigation\";\n\n\nexport type ActionType = {\n    type: string,\n    payload: any\n}\n\nconst initialState = {\n    books: []\n}\n\nexport type StateType = {\n    books: Array<BookRecord>\n}\n\nconst reducer = (state: StateType = initialState, action: ActionType): StateType => {\n    switch (action.type) {\n        case 'SET_BOOKS_LIST':\n            return {\n                ...state, books: [...action.payload]\n            }\n\n        case 'SEARCH_FILTER':\n            console.log(\"state\", state)\n            return {\n                ...state,\n                books: state.books.filter(b => b.book.title.toLowerCase().includes(action.payload.filter.toLowerCase()) || b.book.author.toLowerCase().includes(action.payload.filter.toLowerCase()))\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const App = () => {\n\n    const [state, dispatch] = useReducer<React.Reducer<StateType, ActionType>>(reducer, initialState);\n\n    return (\n        <div className={s.App}>\n            <header className={s.App_header}>\n                <Navigation/>\n            </header>\n            <main className={s.main}>\n\n\n                <Route exact path=\"/\" render={() => <BookList state={state}\n                                                              dispatch={dispatch}/>}/>\n\n                <Route path=\"/create\" render={() => <CreateBook/>}/>\n\n\n                <Route path=\"/edit/:id\" render={() => <EditBook state={state}\n                                                                dispatch={dispatch}/>}/>\n\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormField_error__1w54K\",\"input_image\":\"FormField_input_image__2jhd_\",\"file_block\":\"FormField_file_block__3hXtj\",\"image\":\"FormField_image__3uMbO\",\"image_container\":\"FormField_image_container__2GkBr\",\"file_block_wrapper\":\"FormField_file_block_wrapper__3lq5v\",\"input_file_icon\":\"FormField_input_file_icon__1WoLK\",\"input_file\":\"FormField_input_file__3ZKgE\",\"input_file_button\":\"FormField_input_file_button__gK5xZ\"};"],"sourceRoot":""}