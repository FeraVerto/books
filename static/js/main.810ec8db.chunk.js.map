{"version":3,"sources":["ui/FormField/FormField.module.css","ui/BookList/BookList.module.css","App.module.css","ui/CreateBook/CreateBook.module.css","ui/EditBook/EditBook.module.css","ui/common/Button/Button.module.css","ui/common/Input/Input.module.css","ui/Search/Search.module.css","ui/Navigation/Navigaton.module.css","ui/common/Button/Button.tsx","ui/common/Input/Input.tsx","ui/common/getBooks.ts","ui/Search/Search.tsx","ui/BookList/BookList.tsx","ui/image/download.svg","ui/FormField/FormField.tsx","ui/common/getBase64.ts","ui/CreateBook/CreateBook.tsx","ui/EditBook/EditBook.tsx","ui/Navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","type","text","onClick","className","s","button","Input","id","onChange","value","name","rest","input","getBooks","resultArray","Object","keys","localStorage","key","book","getItem","push","JSON","parse","Search","dispatch","state","useState","receivedBooks","setReceivedBooks","formik","useFormik","initialValues","search","onSubmit","values","payload","filter","useEffect","handleSubmit","handleChange","BookList","book_list","books","map","book_item_link","to","book_item","author","title","book_item_image","alt","src","cover","FormField","htmlFor","getFieldProps","file_block","image_container","image","width","height","file_block_wrapper","input_file_button","input_file_icon_wrapper","input_file_icon","download","input_file","input_image","onBlur","handleBlur","event","target","setFieldValue","files","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","match","readAsDataURL","CreateBook","createBook","setCreateBook","then","base64","stringify","uuidv4","setItem","create_position","form","EditBook","editMode","setEditMode","useParams","localStateUpdate","setLocalStateUpdate","localStateDelete","setLocalStateDelete","removeItem","b","deleteBook","Navigation","navigation","initialState","reducer","action","console","log","toLowerCase","includes","App","useReducer","App_header","main","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.810ec8db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_image\":\"FormField_input_image__2jhd_\",\"file_block\":\"FormField_file_block__3hXtj\",\"image\":\"FormField_image__3uMbO\",\"image_container\":\"FormField_image_container__2GkBr\",\"file_block_wrapper\":\"FormField_file_block_wrapper__3lq5v\",\"input_file_icon\":\"FormField_input_file_icon__1WoLK\",\"input_file\":\"FormField_input_file__3ZKgE\",\"input_file_button\":\"FormField_input_file_button__gK5xZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"book_list\":\"BookList_book_list__3m2QI\",\"book_item_link\":\"BookList_book_item_link__3cqyY\",\"book_item\":\"BookList_book_item__2BIC2\",\"book_item_image\":\"BookList_book_item_image__2s3Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"main\":\"App_main__3ZkGI\",\"create_position\":\"App_create_position__367Uh\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App_header\":\"App_App_header__1WhCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateBook_form__19dYL\",\"create_position\":\"CreateBook_create_position__3j2xZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditBook_form__1EE08\",\"create_position\":\"EditBook_create_position__12pxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__senhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3q1z6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2YEIt\",\"button\":\"Search_button__2nzbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigaton_navigation__clwd_\"};","import React from 'react'\nimport s from './Button.module.css'\n\nexport type ButtonType = {\n    text: string\n    type: \"button\" | \"submit\" | \"reset\" | undefined\n    onClick?: () => void\n}\n\nexport const Button = ({type,  text, onClick}: ButtonType) => {\n    return (\n        <button className={s.button} type={type} onClick={onClick}>{text}</button>\n    )\n}","import React, {ChangeEvent} from 'react'\nimport s from \"./Input.module.css\"\n\nexport type InputType = {\n    className?: string\n    id: string\n    onChange?: (event: ChangeEvent) => void\n    value?: string\n    type: string\n    onBlur?: () => void\n    name: string\n}\n\nexport const Input = ({className, id, onChange, value, type, name, ...rest}: InputType) => {\n    return (\n        <input type={type}\n               className={`${s.input} ${className}`}\n               id={id}\n               onChange={onChange}\n               value={value}\n               name={name}\n               {...rest}\n        />\n    )\n}","import {BookRecord} from \"../BookList/BookList\";\n\nexport const getBooks = () => {\n    const resultArray: Array<BookRecord> = []\n    const keys: Array<string> = Object.keys(localStorage);\n    for (const key of keys) {\n        const book = localStorage.getItem(key)\n        if (book !== null) resultArray.push({id: key, book: JSON.parse(book)})\n    }\n    return resultArray\n}","import React, {Dispatch, useEffect, useState} from 'react'\nimport {Button} from '../common/Button/Button';\nimport {Input} from \"../common/Input/Input\";\nimport s from \"./Search.module.css\"\nimport {useFormik} from \"formik\";\nimport {ActionType, StateType} from \"../../App\";\nimport {getBooks} from \"../common/getBooks\";\nimport {BookRecord} from \"../BookList/BookList\";\n\ntype SearchType = {\n    state: StateType\n    dispatch: Dispatch<ActionType>\n}\n\nexport const Search = ({dispatch, state}: SearchType) => {\n\n    const [receivedBooks, setReceivedBooks] = useState<Array<BookRecord>>()\n\n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },\n        onSubmit: values => {\n            dispatch({type: 'SET_BOOKS_LIST', payload: receivedBooks})\n            dispatch({type: \"SEARCH_FILTER\", payload: {filter: values.search}})\n        }\n    });\n\n    useEffect(() => {\n        setReceivedBooks(getBooks())\n    }, [])\n\n    return (\n        <form onSubmit={formik.handleSubmit} className={s.search}>\n\n            <Input id={\"search\"}\n                   name={\"search\"}\n                   onChange={formik.handleChange}\n                   value={formik.values.search}\n                   type=\"search\"/>\n            <Button text={\"Search\"} type={\"submit\"}/>\n        </form>\n\n    )\n}","import React, {Dispatch, useEffect} from 'react'\nimport {NavLink} from 'react-router-dom';\nimport {ActionType, StateType} from \"../../App\";\nimport s from './BookList.module.css'\nimport {Search} from \"../Search/Search\";\nimport {getBooks} from \"../common/getBooks\";\n\nexport type BookType = {\n    title: string,\n    author: string,\n    cover: any\n}\n\nexport type BookRecord = {\n    id: string,\n    book: BookType\n}\n\nexport type BooksListType = {\n    state: StateType\n    dispatch: Dispatch<ActionType>\n}\n\n\nexport const BookList = ({state, dispatch}: BooksListType) => {\n\n    useEffect(() => {\n        dispatch({type: 'SET_BOOKS_LIST', payload: getBooks()})\n    }, [])\n\n    return (\n        <>\n            <h1>List of Books</h1>\n            <Search state={state} dispatch={dispatch}/>\n            <ul className={s.book_list}>\n                {\n                    state.books.map((book: BookRecord) => {\n                        return (\n                            <NavLink className={s.book_item_link} key={book.id} to={`/edit/${book.id}`}>\n                                <li className={s.book_item}>\n                                    <span>Author: {book.book.author ? book.book.author : \"unknown\"}</span>\n                                    <span>{book.book.title}</span>\n                                    <div className={s.book_item_image}>\n                                        <img alt={book.book.title} src={book.book.cover}/>\n                                    </div>\n                                </li>\n                            </NavLink>\n                        )\n                    })\n                }\n            </ul>\n        </>\n\n    )\n}","export default __webpack_public_path__ + \"static/media/download.3bcaa934.svg\";","import React, {ChangeEvent, useState} from 'react'\nimport {FormikValues} from \"formik/dist/types\";\nimport s from \"./FormField.module.css\"\nimport {Input} from \"../common/Input/Input\";\nimport download from \"./../image/download.svg\"\n\nexport type FormField = {\n    formik: FormikValues\n    title: string\n    author: string\n    cover?: string\n}\n\nexport const FormField = ({formik, title, author, cover}: FormField) => {\n\n    return (\n        <>\n            <label htmlFor=\"title\">{title}</label>\n            <Input id={\"title\"}\n                   type={\"text\"}\n                   {...formik.getFieldProps('title')}\n                /*onChange={(e: any) => setNewTitle(e.target.value)}*/\n            />\n\n            <label htmlFor=\"author\">{author}</label>\n            <Input id={\"author\"}\n                   type={\"text\"}\n                /*onChange={(e: any) => setNewAuthor(e.target.value)}*/\n                   {...formik.getFieldProps('author')}/>\n\n            <div className={s.file_block}>\n\n                <div className={s.image_container}>\n                    <img className={s.image} src={cover} width={200} height={200} alt={title}/>\n                </div>\n\n                <div className={s.file_block_wrapper}>\n                    <label className={s.input_file_button} htmlFor=\"cover\">\n                        <span className={s.input_file_icon_wrapper}>\n                            <img className={s.input_file_icon} src={download}\n                                 alt=\"Выбрать файл\" width=\"25\"/>\n                        </span>\n                        <span className={s.input_file}>Select a file</span>\n                    </label>\n\n                    <Input className={s.input_image}\n                           id={\"cover\"}\n                           type={\"file\"}\n                           name={\"cover\"}\n                           onBlur={formik.handleBlur}\n                           onChange={(event: ChangeEvent) => {\n                               const target = event.target as HTMLInputElement\n                               formik.setFieldValue(\"cover\", (target.files as FileList)[0]);\n                           }}\n                    />\n                </div>\n            </div>\n\n\n        </>\n    )\n}","export const getBase64 = (file: Blob) => {\n    return new Promise((resolve, reject) => {\n        //создаем объект для чтения файлов с компьютера пользователя\n        const reader = new FileReader();\n        //обработчик события load,\n        //срабатывает при успешном завершении операции чтения\n        reader.onload = () => resolve(reader.result);\n        //обработчик события error\n        //срабатывает, когда возникает ошибка при операции чтения\n        reader.onerror = error => reject(error);\n        //проверка на существование file и проверка существования образа\n        if (file.type && file.type.match('image.*')) {\n            //запускает процесс чтения Blob, => data: URL\n            reader.readAsDataURL(file);\n        }\n    });\n}","import React, {useEffect, useState} from 'react'\nimport {useFormik} from \"formik\";\nimport {v4 as uuidv4} from 'uuid';\nimport {FormField} from \"../FormField/FormField\";\nimport {BookType} from \"../BookList/BookList\";\nimport {getBase64} from \"../common/getBase64\";\nimport s from \"./CreateBook.module.css\"\nimport {Button} from \"../common/Button/Button\";\n\n\nexport const CreateBook = () => {\n\n    const [createBook, setCreateBook] = useState<string>(\"\")\n\n    const formik = useFormik<BookType>({\n        initialValues: {\n            title: '',\n            author: '',\n            cover: {}\n        },\n        //почитать про промисы в onSubmit\n        onSubmit: values => {\n            getBase64(values.cover).then(base64 => {\n                values = {...values, cover: base64}\n                setCreateBook(JSON.stringify(values))\n            });\n        }\n    })\n\n    useEffect(() => {\n        const id = uuidv4();\n        createBook && localStorage.setItem(id, createBook)\n    })\n\n    return (\n        <div className={s.create_position}>\n            <form className={s.form} onSubmit={formik.handleSubmit}>\n                <h2>Add a new book</h2>\n                <FormField formik={formik}\n                           title={\"Название книги\"}\n                           author={\"Имя автора\"}/>\n                <Button type={\"submit\"} text={\"Создать\"}/>\n            </form>\n        </div>\n    )\n}","import React, {ChangeEvent, Dispatch, useEffect, useState} from 'react';\nimport {ActionType, StateType} from \"../../App\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {useFormik} from \"formik\";\nimport {FormField} from \"../FormField/FormField\";\nimport {BookType} from \"../BookList/BookList\";\nimport {getBase64} from \"../common/getBase64\";\nimport {Button} from \"../common/Button/Button\";\nimport s from \"./EditBook.module.css\"\nimport {log} from \"util\";\n\nexport type EditBookType = {\n    state: StateType\n    dispatch: Dispatch<ActionType>\n    editMode: boolean\n    setEditMode: (editMode: boolean) => void\n}\n\n\nexport const EditBook = ({state, dispatch, editMode, setEditMode}: EditBookType) => {\n    const {id} = useParams<{ id: string }>()\n\n\n    const [localStateUpdate, setLocalStateUpdate] = useState<string | null>(\"\")\n    const [localStateDelete, setLocalStateDelete] = useState<string>(\"\")\n\n\n    const deleteBook = (id: string) => {\n        setLocalStateDelete(id)\n    }\n\n    const updateBook = () => {\n        setEditMode(true)\n    }\n\n\n    const formik = useFormik<BookType>({\n        initialValues: {\n            title: '',\n            author: '',\n            cover: {}\n        },\n        onSubmit: values => {\n            getBase64(values.cover).then(base64 => {\n                values = {...values, cover: base64}\n                setLocalStateUpdate(JSON.stringify(values))\n                updateBook()\n            });\n\n        }\n    })\n\n    useEffect(() => {\n        localStateUpdate && localStorage.setItem(id, localStateUpdate)\n        localStateDelete && localStorage.removeItem(localStateDelete)\n        setEditMode(false)\n    })\n\n    if (editMode) return <Redirect to='/'/>\n\n    return (\n        <div className={s.create_position}>\n            <div className={s.form}>\n\n                {\n                    state.books.map(b => {\n                        return b.id === id &&\n                            (\n                                <form onSubmit={formik.handleSubmit} key={b.id}>\n                                    <FormField formik={formik}\n                                               title={\"Book Title\"}\n                                               author={\"Author\"}\n                                               cover={b.book.cover}\n                                    />\n\n                                    <Button type={\"submit\"}\n                                            text={\"Удалить\"}\n                                            onClick={() => {\n                                                deleteBook(b.id)\n                                                setEditMode(true)\n                                            }}/>\n                                    <Button type={\"submit\"}\n                                            text={\"Сохранить\"}\n                                    />\n\n                                </form>\n                            )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from \"./Navigaton.module.css\"\n\nexport const Navigation = () => {\n    return (\n        <div className={s.navigation}>\n            <NavLink to=\"/\">List books</NavLink>\n            <NavLink to=\"/create\">Create book</NavLink>\n        </div>\n    )\n}","import React, {useReducer, useState} from 'react';\nimport {Route} from 'react-router-dom';\nimport s from './App.module.css';\nimport {BookList, BookRecord} from \"./ui/BookList/BookList\";\nimport {CreateBook} from \"./ui/CreateBook/CreateBook\";\nimport {EditBook} from \"./ui/EditBook/EditBook\";\nimport {Navigation} from \"./ui/Navigation/Navigation\";\nimport {Input} from \"./ui/common/Input/Input\";\nimport {Search} from \"./ui/Search/Search\";\n\nexport type ActionType = {\n    type: string,\n    payload: any\n}\n\nconst initialState = {\n    books: []\n}\n\nexport type StateType = {\n    books: Array<BookRecord>\n}\n\nconst reducer = (state: StateType = initialState, action: ActionType): StateType => {\n    switch (action.type) {\n        case 'SET_BOOKS_LIST':\n            return {\n                ...state, books: [...action.payload]\n            }\n\n        case 'SEARCH_FILTER':\n            console.log(\"state\", state)\n            return {\n                ...state,\n                books: state.books.filter(b => b.book.title.toLowerCase().includes(action.payload.filter.toLowerCase()) || b.book.author.toLowerCase().includes(action.payload.filter.toLowerCase()))\n            }\n\n        default:\n            return state\n    }\n}\n/*\nconst SearchBooks = () => async() => {\n    await\n}*/\n\n\nexport const App = () => {\n\n    const [state, dispatch] = useReducer<React.Reducer<StateType, ActionType>>(reducer, initialState);\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    return (\n        <div className={s.App}>\n            <header className={s.App_header}>\n                <Navigation/>\n            </header>\n            <main className={s.main}>\n\n\n                <Route exact path=\"/\" render={() => <BookList state={state}\n                                                              dispatch={dispatch}/>}/>\n\n                <Route path=\"/create\" render={() => <CreateBook/>}/>\n\n\n                <Route path=\"/edit/:id\" render={() => <EditBook state={state}\n                                                                dispatch={dispatch}\n                                                                editMode={editMode}\n                                                                setEditMode={setEditMode}\n\n                />}/>\n\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}