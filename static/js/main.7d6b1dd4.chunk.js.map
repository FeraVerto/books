{"version":3,"sources":["App.module.css","ui/BookList/BookList.tsx","ui/CreateBook/CreateBook.tsx","ui/EditBook/EditBook.tsx","ui/Navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","BookList","state","dispatch","useEffect","resultArray","Object","keys","localStorage","key","book","getItem","push","id","JSON","parse","type","payload","books","map","to","onDoubleClick","bookTitle","author","CreateBook","formik","useFormik","initialValues","onSubmit","values","uuidv4","data","stringify","setItem","handleSubmit","htmlFor","name","onChange","handleChange","value","EditBook","useParams","useState","editMode","setEditMode","onClick","removeItem","deleteBook","console","log","Navigation","initialState","reducer","action","filter","s","App","useReducer","className","App_header","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,WAAa,0B,uKCmBrHC,EAAW,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAG7BC,qBAAU,WAGN,IAFA,IAAMC,EAAiC,GAEvC,MAD4BC,OAAOC,KAAKC,cACxC,eAAwB,CAAnB,IAAMC,EAAG,KACJC,EAAOF,aAAaG,QAAQF,GACrB,OAATC,GAAeL,EAAYO,KAAK,CAACC,GAAIJ,EAAKC,KAAMI,KAAKC,MAAML,KAGnEP,EAAS,CAACa,KAAM,iBAAkBC,QAASZ,MAE5C,IAMH,OACI,6BAGQH,EAAMgB,MAAMC,KAAI,SAACT,GACb,OACI,cAAC,IAAD,CAAuBU,GAAE,gBAAWV,EAAKG,IAAzC,SACI,qBAAIQ,cAAe,kBAXbR,EAWwCH,EAAKG,QAVvEV,EAAS,CAACa,KAAM,WAAYC,QAASJ,IADZ,IAACA,GAWN,UACI,+BAAOH,EAAKA,KAAKY,YACjB,+BAAOZ,EAAKA,KAAKa,aAHXb,EAAKG,U,gBCzC9BW,EAAa,WAEtB,IAAMC,EAASC,YAAU,CACrBC,cAAe,CACXL,UAAW,GACXC,OAAQ,IAEZK,SAAU,SAAAC,GACN,IAAMhB,EAAKiB,cACLC,EAAOjB,KAAKkB,UAAUH,GAC5BrB,aAAayB,QAAQpB,EAAIkB,MAIjC,OACI,uBAAMH,SAAUH,EAAOS,aAAvB,UACI,uBAAOC,QAAQ,GAAf,6FACA,uBAAOtB,GAAG,YACHuB,KAAK,YACLpB,KAAK,OACLqB,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOI,OAAOP,YAE5B,uBAAOa,QAAQ,SAAf,2EACA,uBAAOtB,GAAG,SACHuB,KAAK,SACLpB,KAAK,OACLqB,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOI,OAAON,SAE5B,wBAAQP,KAAK,SAAb,4DCxBCwB,EAAW,SAAC,GAAqC,IAApCtC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SACtBU,EAAM4B,cAAN5B,GADkD,EAGzB6B,oBAAkB,GAHO,mBAGlDC,EAHkD,KAGxCC,EAHwC,KAgBzD,OACI,+BACMD,GACK,8BAEKzC,EAAMgB,MAAMC,KAAI,SAAAT,GACZ,OAAOA,EAAKG,KAAOA,GAEX,gCACI,uBAAOsB,QAAQ,QAAf,SAAwBzB,EAAKA,KAAKY,YAClC,uBAAOT,GAAG,QAAQG,KAAK,SAEvB,uBAAOmB,QAAQ,SAAf,SAAyBzB,EAAKA,KAAKa,SACnC,uBAAOV,GAAG,SAASG,KAAK,SAExB,wBAAQ6B,QAAS,kBA1BlC,SAAChC,GAChBL,aAAasC,WAAWjC,GACxBV,EAAS,CAACa,KAAM,cAAeC,QAASJ,IAwBekC,CAAWrC,EAAKG,KAAvC,oBACA,wBAAQgC,QAAS,kBArBjDG,QAAQC,IAAI,aACZL,GAAY,IAoBoB,oBARMlC,EAAKG,YC/BtCqC,EAAa,WACtB,OACI,gCACI,cAAC,IAAD,CAAS9B,GAAG,IAAZ,2EACA,cAAC,IAAD,CAASA,GAAG,UAAZ,2FCMN+B,EAAe,CACjBjC,MAAO,IAOLkC,EAAU,WAAqE,IAApElD,EAAmE,uDAAhDiD,EAAcE,EAAkC,uCAChF,OAAQA,EAAOrC,MACX,IAAK,iBACD,OAAO,2BACAd,GADP,IACcgB,MAAM,YAAKmC,EAAOpC,WAGpC,IAAK,cACD,OAAO,2BACAf,GADP,IAEIgB,MAAOhB,EAAMgB,MAAMoC,QAAO,SAAAC,GAAC,OAAIA,EAAE1C,KAAOwC,EAAOpC,aAGvD,IAAK,cACD,OAAO,eACAf,GAGX,QACI,OAAOA,IA2BJsD,EAtBI,WAAO,IAAD,EAEKC,qBAAiDL,EAASD,GAF/D,mBAEdjD,EAFc,KAEPC,EAFO,KAKrB,OACI,sBAAKuD,UAAWH,IAAEC,IAAlB,UACI,wBAAQE,UAAWH,IAAEI,WAArB,SACI,cAAC,EAAD,MAEJ,iCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,CAAU5D,MAAOA,EACPC,SAAUA,OACxD,cAAC,IAAD,CAAO0D,KAAK,UAAUC,OAAQ,kBAAM,cAAC,EAAD,OAEpC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,CAAU5D,MAAOA,EACPC,SAAUA,cC/C3D4D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASV,OACL,cAAC,IAAMW,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.7d6b1dd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App_header\":\"App_App_header__1WhCC\"};","import React, {Dispatch, useEffect, useState} from 'react'\nimport {NavLink, useRouteMatch} from 'react-router-dom';\nimport {StateType} from \"../../App\";\n\nexport type BookType = {\n    bookTitle: string,\n    author: string\n}\n\nexport type BookRecord = {\n    id: string,\n    book: BookType\n}\n\nexport type BooksListType = {\n    state: StateType\n    dispatch: any\n\n}\n\nexport const BookList = ({state, dispatch}: BooksListType) => {\n\n\n    useEffect(() => {\n        const resultArray: Array<BookRecord> = []\n        const keys: Array<string> = Object.keys(localStorage);\n        for (const key of keys) {\n            const book = localStorage.getItem(key)\n            if (book !== null) resultArray.push({id: key, book: JSON.parse(book)})\n        }\n\n        dispatch({type: 'SET_BOOKS_LIST', payload: resultArray})\n\n    }, [])\n\n    const onDoubleClickTheBook = (id: string) => {\n        dispatch({type: 'GET_BOOK', payload: id})\n    }\n\n    return (\n        <ul>\n\n            {\n                state.books.map((book: BookRecord) => {\n                    return (\n                        <NavLink key={book.id} to={`/edit/${book.id}`}>\n                            <li onDoubleClick={() => onDoubleClickTheBook(book.id)}>\n                                <span>{book.book.bookTitle}</span>\n                                <span>{book.book.author}</span>\n                            </li>\n                        </NavLink>\n                    )\n                })\n            }\n\n        </ul>\n    )\n}","import React from 'react'\nimport {useFormik} from \"formik\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const CreateBook = () => {\n\n    const formik = useFormik({\n        initialValues: {\n            bookTitle: '',\n            author: ''\n        },\n        onSubmit: values => {\n            const id = uuidv4();\n            const data = JSON.stringify(values)\n            localStorage.setItem(id, data)\n        },\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <label htmlFor=\"\">Название книги</label>\n            <input id=\"bookTitle\"\n                   name=\"bookTitle\"\n                   type=\"text\"\n                   onChange={formik.handleChange}\n                   value={formik.values.bookTitle}/>\n\n            <label htmlFor=\"author\">Автор книги</label>\n            <input id=\"author\"\n                   name=\"author\"\n                   type=\"text\"\n                   onChange={formik.handleChange}\n                   value={formik.values.author}/>\n\n            <button type=\"submit\">Создать</button>\n        </form>\n    )\n}","import React, {Dispatch, useState} from 'react';\nimport {StateType} from \"../../App\";\nimport {useParams} from \"react-router-dom\";\n\nexport type EditBookType = {\n    state: StateType\n    dispatch: Dispatch<any>\n}\n\n\nexport const EditBook = ({state, dispatch}: EditBookType) => {\n    const {id} = useParams<{ id: string }>()\n\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const deleteBook = (id: string) => {\n        localStorage.removeItem(id)\n        dispatch({type: 'DELETE_BOOK', payload: id})\n    }\n\n    const saveBook = () => {\n        console.log(\"Save\")\n        setEditMode(true)/*\n        dispatch({type: 'UPDATE_BOOK', payload: {id, book: {title, author}}})*/\n    }\n\n    return (\n        <div>\n            {!editMode\n                && <div>\n                    {\n                        state.books.map(book => {\n                            return book.id === id &&\n                                (\n                                    <div key={book.id}>\n                                        <label htmlFor=\"title\">{book.book.bookTitle}</label>\n                                        <input id=\"title\" type=\"text\"/>\n\n                                        <label htmlFor=\"author\">{book.book.author}</label>\n                                        <input id=\"author\" type=\"text\"/>\n\n                                        <button onClick={() => deleteBook(book.id)}>Delete</button>\n                                        <button onClick={() => saveBook()}>Save</button>\n                                    </div>\n                                )\n                        })\n\n                        /*state.books.filter(b => b.id === id ? <li key={b.id}>\n                            <span>{b.book.bookTitle}</span>\n                            <span>{b.book.author}</span>\n                            <button onClick={() => deleteBook(b.id)}>Delete</button>\n                            <button onClick={() => editBook()}>Edit</button>\n                        </li> : null)*/\n                    }\n                </div> }\n\n        </div>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Navigation = () => {\n    return (\n        <div>\n            <NavLink to=\"/\">Список книг</NavLink>\n            <NavLink to=\"/create\">Создать книгу</NavLink>\n        </div>\n    )\n}","import React, {Reducer, useReducer, useState} from 'react';\nimport {generatePath, Route, Router, useParams, useRouteMatch} from 'react-router-dom';\nimport s from './App.module.css';\nimport {BookList, BookRecord, BookType} from \"./ui/BookList/BookList\";\nimport {CreateBook} from \"./ui/CreateBook/CreateBook\";\nimport {EditBook} from \"./ui/EditBook/EditBook\";\nimport {Navigation} from \"./ui/Navigation/Navigation\";\n\ntype ActionType = {\n    type: string,\n    payload: any\n}\n\nconst initialState = {\n    books: []\n}\n\nexport type StateType = {\n    books: Array<BookRecord>\n}\n\nconst reducer = (state: StateType = initialState, action: ActionType): StateType => {\n    switch (action.type) {\n        case 'SET_BOOKS_LIST':\n            return {\n                ...state, books: [...action.payload]\n            }\n\n        case 'DELETE_BOOK':\n            return {\n                ...state,\n                books: state.books.filter(s => s.id !== action.payload)\n            }\n\n        case 'UPDATE_BOOK':\n            return {\n                ...state\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const App = () => {\n\n    const [state, dispatch] = useReducer<React.Reducer<StateType, ActionType>>(reducer, initialState);\n\n\n    return (\n        <div className={s.App}>\n            <header className={s.App_header}>\n                <Navigation/>\n            </header>\n            <main>\n                <Route exact path=\"/\" render={() => <BookList state={state}\n                                                              dispatch={dispatch}/>}/>\n                <Route path=\"/create\" render={() => <CreateBook/>}/>\n\n                <Route path=\"/edit/:id\" render={() => <EditBook state={state}\n                                                                dispatch={dispatch}/>}/>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}