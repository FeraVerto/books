{"version":3,"sources":["App.module.css","ui/BookList/BookList.tsx","ui/FormField/FormField.tsx","ui/getBase64.ts","ui/CreateBook/CreateBook.tsx","ui/EditBook/EditBook.tsx","ui/Navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","BookList","state","dispatch","useEffect","resultArray","Object","keys","localStorage","key","book","getItem","push","id","JSON","parse","type","payload","books","map","to","title","author","width","height","src","cover","FormField","formik","htmlFor","getFieldProps","name","onBlur","handleBlur","value","values","onChange","event","setFieldValue","target","files","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","match","readAsDataURL","CreateBook","useState","createBook","setCreateBook","useFormik","initialValues","onSubmit","then","base64","stringify","uuidv4","setItem","handleSubmit","EditBook","useParams","editMode","localStateUpdate","setLocalStateUpdate","localStateDelete","setLocalStateDelete","removeItem","onClick","deleteBook","Navigation","initialState","reducer","action","App","useReducer","className","s","App_header","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6662119.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App_header\":\"App_App_header__1WhCC\"};","import React, {useEffect} from 'react'\nimport {NavLink} from 'react-router-dom';\nimport {StateType} from \"../../App\";\n\nexport type BookType = {\n    title: string,\n    author: string,\n    cover: any\n}\n\nexport type BookRecord = {\n    id: string,\n    book: BookType\n}\n\nexport type BooksListType = {\n    state: StateType\n    dispatch: any\n}\n\nexport const BookList = ({state, dispatch}: BooksListType) => {\n\n\n    useEffect(() => {\n        const resultArray: Array<BookRecord> = []\n        const keys: Array<string> = Object.keys(localStorage);\n        for (const key of keys) {\n            const book = localStorage.getItem(key)\n            if (book !== null) resultArray.push({id: key, book: JSON.parse(book)})\n        }\n\n        dispatch({type: 'SET_BOOKS_LIST', payload: resultArray})\n\n    }, [])\n\n    return (\n        <ul>\n\n            {\n                state.books.map((book: BookRecord) => {\n                    return (\n                        <NavLink key={book.id} to={`/edit/${book.id}`}>\n                            <li>\n                                <span>{book.book.title}</span>\n                                <span>{book.book.author}</span>\n                                <img width={170} height={200} src={book.book.cover} />\n                            </li>\n                        </NavLink>\n                    )\n                })\n            }\n\n        </ul>\n    )\n}","import React from 'react'\n\nexport type FormField = {\n    formik: any,\n    title: string,\n    author: string\n}\n\nexport const FormField = ({formik, title, author}: FormField) => {\n    return (\n        <>\n            <label htmlFor=\"title\">{title}</label>\n            <input id=\"title\"\n                   type=\"text\"\n                   {...formik.getFieldProps('title')}/>\n\n            <label htmlFor=\"author\">{author}</label>\n            <input id=\"author\"\n                   type=\"text\"\n                   {...formik.getFieldProps('author')}/>\n\n            <input id=\"cover\"\n                   type=\"file\"\n                   name=\"cover\"\n                   onBlur={formik.handleBlur}\n                   value={formik.values.name}\n                   onChange={(event: any) =>{\n                       formik.setFieldValue(\"cover\", event.target.files[0]);\n                   }}/>\n        </>\n    )\n}","export const getBase64 = (file: Blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n        if (file && file.type.match('image.*')) {\n            reader.readAsDataURL(file);\n        }\n    });\n}","import React, {useEffect, useState} from 'react'\nimport {useFormik} from \"formik\";\nimport {v4 as uuidv4} from 'uuid';\nimport {FormField} from \"../FormField/FormField\";\nimport {BookType} from \"../BookList/BookList\";\nimport {getBase64} from \"../getBase64\";\n\nexport const CreateBook = () => {\n\n    const [createBook, setCreateBook] = useState<string>(\"\")\n\n    const formik = useFormik<BookType>({\n        initialValues: {\n            title: '',\n            author: '',\n            cover: {}\n        },\n        onSubmit: values => {\n            getBase64(values.cover).then(base64 => {\n                values = {...values, cover: base64}\n                setCreateBook(JSON.stringify(values))\n            });\n        }\n    })\n\n    useEffect(() => {\n        const id = uuidv4();\n        createBook && localStorage.setItem(id, createBook)\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <FormField formik={formik}\n                       title={\"Название книги\"}\n                       author={\"Имя автора\"}/>\n            <button type=\"submit\">Создать</button>\n        </form>\n    )\n}","import React, {Dispatch, useEffect, useState} from 'react';\nimport {StateType} from \"../../App\";\nimport {useParams} from \"react-router-dom\";\nimport {useFormik} from \"formik\";\nimport {FormField} from \"../FormField/FormField\";\nimport {BookType} from \"../BookList/BookList\";\nimport {getBase64} from \"../getBase64\";\n\nexport type EditBookType = {\n    state: StateType\n    dispatch: Dispatch<any>\n}\n\n\nexport const EditBook = ({state, dispatch}: EditBookType) => {\n    const {id} = useParams<{ id: string }>()\n\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const [localStateUpdate, setLocalStateUpdate] = useState<string | null>(\"\")\n    const [localStateDelete, setLocalStateDelete] = useState<string>(\"\")\n\n    const deleteBook = (id: string) => {\n        setLocalStateDelete(id)\n    }\n\n    const formik = useFormik<BookType>({\n        initialValues: {\n            title: '',\n            author: '',\n            cover: {}\n        },\n        onSubmit: values => {\n            getBase64(values.cover).then(base64 => {\n                values = {...values, cover: base64}\n                setLocalStateUpdate(JSON.stringify(values))\n            });\n        }\n    })\n\n    useEffect(() => {\n        localStateUpdate && localStorage.setItem(id, localStateUpdate)\n        localStateDelete && localStorage.removeItem(localStateDelete)\n    })\n\n    return (\n        <div>\n            {\n                !editMode && <div>\n                    {\n                        state.books.map(book => {\n                            return book.id === id &&\n                                (\n                                    <form onSubmit={formik.handleSubmit} key={book.id}>\n                                        <FormField formik={formik}\n                                                   title={book.book.title}\n                                                   author={book.book.author}/>\n\n                                        <button type=\"submit\" onClick={() => deleteBook(book.id)}>Delete</button>\n                                        <button type=\"submit\">Save</button>\n                                    </form>\n                                )\n                        })\n                    }\n                </div>\n            }\n\n        </div>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Navigation = () => {\n    return (\n        <div>\n            <NavLink to=\"/\">Список книг</NavLink>\n            <NavLink to=\"/create\">Создать книгу</NavLink>\n        </div>\n    )\n}","import React, {useReducer} from 'react';\nimport {Route} from 'react-router-dom';\nimport s from './App.module.css';\nimport {BookList, BookRecord} from \"./ui/BookList/BookList\";\nimport {CreateBook} from \"./ui/CreateBook/CreateBook\";\nimport {EditBook} from \"./ui/EditBook/EditBook\";\nimport {Navigation} from \"./ui/Navigation/Navigation\";\n\ntype ActionType = {\n    type: string,\n    payload: any\n}\n\nconst initialState = {\n    books: []\n}\n\nexport type StateType = {\n    books: Array<BookRecord>\n}\n\nconst reducer = (state: StateType = initialState, action: ActionType): StateType => {\n    switch (action.type) {\n        case 'SET_BOOKS_LIST':\n            return {\n                ...state, books: [...action.payload]\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const App = () => {\n\n    const [state, dispatch] = useReducer<React.Reducer<StateType, ActionType>>(reducer, initialState);\n\n    return (\n        <div className={s.App}>\n            <header className={s.App_header}>\n                <Navigation/>\n            </header>\n            <main>\n                <Route exact path=\"/\" render={() => <BookList state={state}\n                                                              dispatch={dispatch}/>}/>\n                <Route path=\"/create\" render={() => <CreateBook/>}/>\n\n                <Route path=\"/edit/:id\" render={() => <EditBook state={state}\n                                                                dispatch={dispatch}/>}/>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}